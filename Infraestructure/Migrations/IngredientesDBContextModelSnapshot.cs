// <auto-generated />
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(IngredientesDBContext))]
    partial class IngredientesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Ingrediente", b =>
                {
                    b.Property<int>("IngredienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredienteID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoIngredienteID")
                        .HasColumnType("int");

                    b.Property<int>("TipoMedidaID")
                        .HasColumnType("int");

                    b.HasKey("IngredienteID");

                    b.HasIndex("TipoIngredienteID");

                    b.HasIndex("TipoMedidaID");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("Domain.Entities.TipoIngrediente", b =>
                {
                    b.Property<int>("TipoIngredienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoIngredienteID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoIngredienteID");

                    b.ToTable("TiposIngrediente");

                    b.HasData(
                        new
                        {
                            TipoIngredienteID = 1,
                            Nombre = "Vegetal"
                        },
                        new
                        {
                            TipoIngredienteID = 2,
                            Nombre = "Lacteo"
                        },
                        new
                        {
                            TipoIngredienteID = 3,
                            Nombre = "Carne"
                        },
                        new
                        {
                            TipoIngredienteID = 4,
                            Nombre = "Especia"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoMedida", b =>
                {
                    b.Property<int>("TipoMedidaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMedidaID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMedidaID");

                    b.ToTable("TiposMedida");

                    b.HasData(
                        new
                        {
                            TipoMedidaID = 1,
                            Nombre = "Gramo"
                        },
                        new
                        {
                            TipoMedidaID = 2,
                            Nombre = "Litro"
                        },
                        new
                        {
                            TipoMedidaID = 3,
                            Nombre = "Unidad"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ingrediente", b =>
                {
                    b.HasOne("Domain.Entities.TipoIngrediente", "TipoIngrediente")
                        .WithMany("Ingredientes")
                        .HasForeignKey("TipoIngredienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoMedida", "TipoMedida")
                        .WithMany("Ingredientes")
                        .HasForeignKey("TipoMedidaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoIngrediente");

                    b.Navigation("TipoMedida");
                });

            modelBuilder.Entity("Domain.Entities.TipoIngrediente", b =>
                {
                    b.Navigation("Ingredientes");
                });

            modelBuilder.Entity("Domain.Entities.TipoMedida", b =>
                {
                    b.Navigation("Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
